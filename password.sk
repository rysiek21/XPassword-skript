on load:
    if file "plugins/XPassword/config.yml" does not exist:
        set skutil yaml value "config.password" from file "plugins/XPassword/config.yml" to "admin"
        set skutil yaml value "lang.logText" from file "plugins/XPassword/config.yml" to "Use /login [password] to login!"
        set skutil yaml value "lang.loggedText" from file "plugins/XPassword/config.yml" to "You logged in!"
        set skutil yaml value "lang.wrongText" from file "plugins/XPassword/config.yml" to "Error! You type wrong password!"
        set skutil yaml value "lang.alreadyText" from file "plugins/XPassword/config.yml" to "You are already logged in."
        set skutil yaml value "lang.changeText" from file "plugins/XPassword/config.yml" to "Password has been changed."
        set skutil yaml value "lang.helpText" from file "plugins/XPassword/config.yml" to "Use /conflogin password [new password] - Set new password"
        set skutil yaml value "lang.permsText" from file "plugins/XPassword/config.yml" to "Error! Not enough permissions!"
on join:
    execute console command "gamemode survival %player%"
    set {%player%.logged} to false
    apply potion of slowness of tier 255 to the player for 999 days
    apply potion of jump boost of tier 150 to the player for 999 days
    apply potion of blindness of tier 150 to the player for 999 days
    set {active.lang.logtext} to skutil yaml value "lang.logText" from file "plugins/XPassword/config.yml"
    send "%{active.lang.logtext}%"
on damage:
    if victim is player:
        if {%victim%.logged} is false:
            cancel event
command /login [<text>]:
    trigger:
        if {%player%.logged} is false:
            set {active.password} to skutil yaml value "config.password" from file "plugins/XPassword/config.yml"
            if arg 1 is {active.password}:
                set {%player%.logged} to true
                remove slowness from the player
                remove jump boost from the player
                remove blindness from the player
                set {active.lang.loggedtext} to skutil yaml value "lang.loggedText" from file "plugins/XPassword/config.yml"
                send "%{active.lang.loggedtext}%"
            else:
                set {active.lang.wrongtext} to skutil yaml value "lang.wrongText" from file "plugins/XPassword/config.yml"
                send "%{active.lang.wrongtext}%"
        else:
            set {active.lang.alreadytext} to skutil yaml value "lang.alreadyText" from file "plugins/XPassword/config.yml"
            send "%{active.lang.alreadytext}%"
command /conflogin [<text>] [<text>]:
    trigger:
        if player has permission "XPass.admin":
            if arg 1 is "password":
                if arg 2 is set:
                    set skutil yaml value "config.password" from file "plugins/XPassword/config.yml" to arg 2
                    set {active.lang.changetext} to skutil yaml value "lang.changeText" from file "plugins/XPassword/config.yml"
                    send "%{active.lang.changetext}%"
                else:
                    set {active.lang.helptext} to skutil yaml value "lang.helpText" from file "plugins/XPassword/config.yml"
                    send "%{active.lang.helptext}%"
            else:
                set {active.lang.helptext} to skutil yaml value "lang.helpText" from file "plugins/XPassword/config.yml"
                send "%{active.lang.helptext}%"
        else:
            set {active.lang.permstext} to skutil yaml value "lang.permsText" from file "plugins/XPassword/config.yml"
            send "%{active.lang.permstext}%"